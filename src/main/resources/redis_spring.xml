<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"  
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd ">
	
	<!-- Redis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		  <!--最大连接数 -->
        <property name="maxTotal" value="${redis.maxActive}" />
        <!--最大空闲连接数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!--初始化连接数 -->
        <property name="minIdle" value="${redis.minIdle}" />
        <!--最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.maxWait}" />

        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
        <!--在进行returnObject对返回的connection进行validateObject校验 -->
        <property name="testOnReturn" value="true" />
        <!--定时对线程池中空闲的链接进行validateObject校验 -->
        <property name="testWhileIdle" value="true" />
		
	</bean>

	<bean id="redisConnectionPool" class="redis.clients.jedis.JedisPool"
		destroy-method="destroy">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.host}" />
		<constructor-arg index="2" value="${redis.port}" />
		<constructor-arg index="3" value="${redis.timeout}" />
		<constructor-arg index="4" value="${redis.password}" />
		<constructor-arg index="5" value="${redis.database}" />
	</bean>
	
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<property name="hostName" value="${redis.host}" />
		<property name="password" value="${redis.password}"/>
		<property name="port" value="${redis.port}"/>
		<property name="timeout" value="${redis.timeout}"/>
	</bean>
	<!-- redis操作模板，这里采用尽量面向对象的模板 -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory" ref="jedisConnectionFactory" />  
    	<!--如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！-->  
        <property name="keySerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
    	</property>  
    	<property name="hashKeySerializer">  
       		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
    	</property>  
    	<property name="valueSerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
    	</property>  
    	<property name="hashValueSerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
    	</property>    
    </bean>  
</beans>
